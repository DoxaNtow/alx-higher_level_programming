>>> print_square = __import__('4-print_square').print_square

# Test Case 1: Appropriate size
>>> print_square(5)
#####
#####
#####
#####
#####

# Test Case 2: Zero-size input
>>> print_square(0)

# Test Case 3: Negative in size range
>>> print_square(-3)
Traceback (most recent call last):
    ...
ValueError: size must be >= 0

# Test Case 4: float size
>>> print_square(3.5)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

# Test Case 5: Float less than 0
>>> print_square(-2.5)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

# Test Case 6: Large/big size
>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

# Test Case 7: String size
>>> print_square('4')
Traceback (most recent call last):
    ...
TypeError: size must be an integer

# Test Case 8: Size as a list
>>> print_square([4])
Traceback (most recent call last):
 ...
TypeError: size must be an integer

# Test Case 9: dictionary size
>>> print_square({'size': 4})
Traceback (most recent call last):
 ...
TypeError: size must be an integer
